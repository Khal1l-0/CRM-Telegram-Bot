import os
import pandas as pd
from aiogram.dispatcher import FSMContext
from aiogram.types import Message, CallbackQuery, ContentType

# === –õ–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ ===
import logging
from app import dp, app
from app.states import GroupName
from app import database as db
from app import keyboards as kb


def read_contacts_from_excel(file_path):
    data = pd.read_excel(file_path)
    if not {'–ò–º—è', '–¢–µ–ª–µ—Ñ–æ–Ω'}.issubset(data.columns):
        raise ValueError("–§–∞–π–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Ç–æ–ª–±—Ü—ã: '–ò–º—è' –∏ '–¢–µ–ª–µ—Ñ–æ–Ω'")
    return data

@dp.callback_query_handler(state=GroupName.name)
async def GroupNameHangler(callback: CallbackQuery, state: FSMContext):
    try:
        async with state.proxy() as data:
            data['name'] = callback.data[7:]
        await callback.message.delete()
        await callback.message.answer('üìÇ –û—Ç–ø—Ä–∞–≤—å—Ç–µ Excel —Ñ–∞–π–ª (.xlsx)')
        await GroupName.next()
    except Exception as e:
        await callback.message.answer(
            f"‚ùó –û—à–∏–±–∫–∞: {e}\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. \n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –Ω–µ –∏—Å—á–µ–∑–∞–µ—Ç , –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –ú—ã –±—ã—Å—Ç—Ä–æ —Ä–µ—à–∏–º –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã! üîß")
        logging.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        await state.finish()


@dp.message_handler(state=GroupName.mana, content_types=ContentType.DOCUMENT)
async def handle_file(message: Message, state: FSMContext):
    async with state.proxy() as data:
        group_name = data['name']

    group = db.getGroupByName(group_name)
    document = message.document
    group = group[0]
    date = group[0]
    time = group[1]
    subject = group[2]
    teacher = group[3]
    lang = group[4]
    type = group[5]
    link = group[6]
    if not document.file_name.endswith('.xlsx'):
        await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ Excel (.xlsx)")
        return
    file_path = f"res/groups/{document.file_name}"
    await document.download(destination_file=file_path)
    try:
        # –ß–∏—Ç–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏–∑ Excel
        contacts = read_contacts_from_excel(file_path)
        # –ó–∞–ø—É—Å–∫–∞–µ–º Pyrogram –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        for _, row in contacts.iterrows():
            name = row['–ò–º—è']
            phone = str(row['–Æ–∑–µ—Ä–Ω–µ–π–º'])
            try:
                # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                message_text = f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <b>{name}</b>! üåü\n–° —Ä–∞–¥–æ—Å—Ç—å—é —Å–æ–æ–±—â–∞–µ–º, —á—Ç–æ –≤–∞—à–∞ –≥—Ä—É–ø–ø–∞ –ø–æ –∫—É—Ä—Å—É <b>{db.getSubjectById(subject)}</b> —Å—Ç–∞—Ä—Ç—É–µ—Ç <b>{date}</b> –≤ <b>{time}</b>! ‚è∞\n–í—ã –±—É–¥–µ—Ç–µ —É—á–∏—Ç—å—Å—è —Å –Ω–∞—à–∏–º –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º ‚Äî <b>{db.getTeacherNameById(teacher)}</b>, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≤–µ–¥–µ—Ç —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ. üìö‚ú®\n–Ø–∑—ã–∫ –∑–∞–Ω—è—Ç–∏—è: <b>{lang.capitalize()}</b>\n–§–æ—Ä–º–∞—Ç: <b>{type.capitalize()}</b>\n–ê –≤–æ—Ç –∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É, –≥–¥–µ –≤—ã –≤—Å—Ç—Ä–µ—Ç–∏—Ç–µ —Å–≤–æ—é –∫–æ–º–∞–Ω–¥—É –∏ –Ω–∞—á–Ω–µ—Ç–µ –ø—É—Ç—å –∫ –Ω–æ–≤—ã–º –∑–Ω–∞–Ω–∏—è–º:\nüîó <b>{link}</b>\n–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å? –ú—ã –∂–¥–µ–º –≤–∞—Å —Å –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º! –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–º–æ—â—å, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è. üòâ\n–£–≤–∏–¥–∏–º—Å—è –Ω–∞ –∑–∞–Ω—è—Ç–∏–∏! üöÄ"
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–∞–π–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)
                user = await app.get_users(phone)
                await app.send_message(chat_id=user.id, text=message_text)
            except Exception as e:
                await message.answer(f"–ù–µ –≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è {name} ({phone})")

        await message.reply("üì§ –°–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!")
    except Exception as e:
        await message.reply(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        logging.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
    finally:
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        if os.path.exists(file_path):
            os.remove(file_path)

    await state.finish()
