from aiogram.dispatcher import FSMContext
from aiogram.types import Message

# === –õ–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ ===
import logging
from app import dp, bot
from app.states import Reason
from app import database as db
from app import keyboards as kb

@dp.message_handler(state=Reason.reason)
async def CancelLessonReason(message: Message, state: FSMContext):
    try:
        async with state.proxy() as data:
            reason = data['reason'] = message.text

        db.cancelAllLesson()
        lessons = db.getTodayLesson()
        for x in lessons:
            await bot.send_message(db.getTgId(x[0]), f"üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É—Ä–æ–∫ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω\n–ü—Ä–∏—á–∏–Ω–∞: {reason} ")
        await message.answer(f'–£—Ä–æ–∫–∏ —É –≤—Å–µ—Ö –≥—Ä—É–ø–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –±—ã–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω—ã, –∏ –≤—Å–µ –±—ã–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω—ã. üö´üìö')
        await state.finish()
    except Exception as e:
        await state.finish()
        await message.answer(
            f"‚ùó –û—à–∏–±–∫–∞: {e}\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. \n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –Ω–µ –∏—Å—á–µ–∑–∞–µ—Ç , –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –ú—ã –±—ã—Å—Ç—Ä–æ —Ä–µ—à–∏–º –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã! üîß")
        logging.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
